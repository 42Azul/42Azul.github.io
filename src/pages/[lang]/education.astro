---
// src/pages/Education.astro
import BaseLayout from '../../layouts/BaseLayout.astro';
import BaseItem from '../../components/BaseItem.astro';

import enData from '../../data/portfolioData.en.json';
import esData from '../../data/portfolioData.es.json';

const { lang } = Astro.params;
const portfolioData = lang === 'es' ? esData : enData;

export function getStaticPaths(){
  return [
  {params : { lang: 'en'  }},
  {params : { lang: 'es'  }},
];
}

// Pull in BOTH "education" AND "skills" from the JSON
const { education, skills } = portfolioData;

// Map the languages and other skills to the bar chart
const skillLevels = {
  Native: 100,
  C2: 100,
  C1: 90,
  B2: 75,
  B1: 60,
};

// Group skills by type (communication, coding, tools) and order them by the skill level
const groupedSkills = skills.skills.reduce((acc, skill) => {
  acc[skill.type] = acc[skill.type] || [];
  acc[skill.type].push(skill);
  return acc;
}, {})
// Sort the skills by level
for (const type in groupedSkills) {
  groupedSkills[type].sort((a, b) => {
    return skillLevels[b.level] - skillLevels[a.level];
  });
}
---

<BaseLayout lang={lang} currentPath="education">
  {/** Existing Education Section **/}
  <section class="container mx-auto px-6 py-12">
    <h1 class="text-4xl font-bold text-center mb-8">
      {education.title}
    </h1>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      {education.items.map((form) => (
        <BaseItem {...form} />
      ))}
    </div>
  </section>

  {/** Newly added Skills Section **/}
  <section class="container mx-auto px-6 py-12 space-y-7">
    <h1 class="text-4xl font-bold text-center mb-8">
      {skills.title}
    </h1>
    <h4 class="text-xl font-bold text-center mb
    -8">{skills.description}</h4>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      {Object.entries(groupedSkills).map(([type, skillGroup]) => (
        <div class="border border-gray-200 rounded-lg p-4 shadow-sm">
          <h2 class="text-2xl font-semibold mb-4 capitalize">
            {type}
          </h2>
          <ul>
            {skillGroup.map((skill) => {
              const fillPercent = skillLevels[skill.level] ?? 50;
              return (
                <li class="mb-4">
                  <div class="flex justify-between items-center">
                    <span class="font-bold">{skill.name}</span>
                    <span class="text-sm text-gray-600">{skill.level}</span>
                  </div>
                  <div class="w-full bg-gray-200 h-2 rounded-md overflow-hidden mt-1">
                    <div
                      class="h-full bg-green-500 transition-all"
                      style={`width: ${fillPercent}%;`}
                    />
                  </div>
                </li>
              );
            })}
          </ul>
        </div>
      ))}
    </div>
  </section>
</BaseLayout>
